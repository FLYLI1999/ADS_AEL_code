/*
函数名: draw_octagon_inductor_single_ring_XY
功能: 绘制一个单圈八边形平面电感,可以设置X和Y方向的长度
参数:
    centerX - 电感中心X坐标
    centerY - 电感中心Y坐标  
    lengthX - 电感X方向的长度
    lengthY - 电感Y方向的长度
    cornerK - 八边形拐角系数(0-1),控制八边形拐角的大小
    pathWidth - 导线宽度
    TW - 端口间距
    TL - 端口引出长度
    LayerName - 绘制所在的层名
返回值: 无
*/
defun draw_octagon_inductor_single_ring_XY(centerX, centerY, lengthX, lengthY, cornerK, pathWidth, TW, TL, LayerName)
{
    // 清除当前选择和删除选中对象
    de_select_all();
    de_delete();
    
    // 获取当前设计上下文
    decl context = de_get_current_design_context();
    
    // 获取指定层的ID和层号
    decl layerId = db_get_layerid(context, LayerName, "drawing");
    decl layerNum = db_get_layer_number(layerId);

    // 设置当前绘制层
    de_set_layer(layerNum);

    // 计算X和Y方向长度的最小值,用于计算拐角大小
    decl Lengthmin = min2(lengthX, lengthY);

    // 设置导线属性
    de_set_path_width(pathWidth);  // 设置导线宽度
    de_set_path_corner(DB_SQUARE_CORNER);  // 设置方形拐角
    
    // 开始绘制八边形电感主体
    de_add_path();

    // 按顺序添加12个顶点坐标,构成八边形电感形状
    de_add_point(lengthX/2.0 + TL, centerY + TW/2.0);     // 端口1连接点
    de_add_point(lengthX/2.0, centerY + TW/2.0);          // 端口1内端点
    
    // 八边形的8个顶点
    de_add_point(lengthX/2.0,  lengthY/2.0 - cornerK * Lengthmin/2.0);
    de_add_point(lengthX/2.0 - cornerK * Lengthmin/2,  lengthY/2.0);
    de_add_point(-1*(lengthX/2.0 - cornerK * Lengthmin/2),  lengthY/2.0);
    de_add_point(-1*lengthX/2.0,  lengthY/2.0 - cornerK * Lengthmin/2);
    de_add_point(-1*lengthX/2.0,  -1*(lengthY/2.0 - cornerK * Lengthmin/2));
    de_add_point(-1*(lengthX/2.0 - cornerK * Lengthmin/2),  -1*lengthY/2.0);
    de_add_point(lengthX/2.0 - cornerK * Lengthmin/2,  -1*lengthY/2.0);
    de_add_point(lengthX/2.0,  -1*(lengthY/2.0 - cornerK * Lengthmin/2));

    de_add_point(lengthX/2.0, centerY - TW/2.0);          // 端口2内端点
    de_add_point(lengthX/2.0 + TL, centerY - TW/2.0);     // 端口2连接点
    
    // 结束路径绘制
    de_end();
    
    // 添加输入端口(端口1)
    decl port1X = centerX + lengthX/2.0 + TL;
    decl port1Y = centerY + TW/2.0;
    db_create_pin(context, port1X, port1Y, 0, layerId, 1, "P1");
    
    // 添加输出端口(端口2) 
    decl port2X = centerX + lengthX/2.0 + TL;
    decl port2Y = centerY - TW/2.0;
    db_create_pin(context, port2X, port2Y, 0, layerId, 2, "P2");
}

// 创建包裹函数方便定制EM配置,尤其是port参考地配置
// 参数: cell_name - 被调用cell名, wrapper_name - 包裹cell名, lib_name - 库名
// 使用方法: creat_wrapper_layout("cell_name", "wrapper_name", "lib_name");
// 操作步骤: 1. 在ADS中手动创建wrapper_name layout cell, 2. 手动copy parameters from cell_name to wrapper_name(一键操作) 3. 修改wrapper_name layout cell的pcell类型为Parameterized sub network Pcell 4. 运行函数
defun creat_wrapper_layout( cell_name, wrapper_name, lib_name )
{
    // 获取包裹cell的设计上下文并显示在新窗口中
    decl macroContext = de_get_design_context_from_name(strcat(lib_name, ":", wrapper_name, ":layout"));
    de_show_context_in_new_window(macroContext);
    // 初始化被调用cell的项信息
    decl itemInfo0LP = de_init_item(strcat(lib_name, ":", cell_name, ":layout"));
    // 获取被调用cell的设计上下文
    decl macroContext = de_get_design_context_from_name(strcat(lib_name, ":", cell_name, ":layout"));
    // 获取被调用cell的定义
    decl itemDefP = db_get_item_definition(macroContext);
    // 获取被调用cell的参数名列表
    decl params_name = dm_item_get_parm_names(itemDefP);

    // 初始化参数列表
    decl params_list = list();
    decl i;

    // 遍历参数名列表，获取每个参数的值并添加到参数列表中
    for(i=0;i<listlen(params_name);i++)
    {
        decl param_value = list(prm_ex(lib_name,"StdForm",params_name[i]));
        params_list = append(params_list,param_value);
    }

    // 设置项信息的参数
    de_set_item_parameters(itemInfo0LP, params_list);
    // 将项信息放置在坐标(0,0)
    de_place_item(itemInfo0LP, 0, 0);

}